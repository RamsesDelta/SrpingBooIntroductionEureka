package com.detalle.armas.controllers;

import com.detalle.armas.models.Detalle;
import com.detalle.armas.models.Pistola;
import com.detalle.armas.service.DetalleService;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.Mapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
public class DetalleController {
	
	private static Logger log = LoggerFactory.getLogger(DetalleController.class);
	
	private Environment env;

    @Autowired
    private DetalleService detalleService;

    @Value("${configuracion.texto}")
    private String texto;
    
    @GetMapping("/listar")
    public List<Detalle> listar(){
        return detalleService.findAll();
    }
    
    
   // @HystrixCommand(fallbackMethod = "metodoAlternativo")
    @GetMapping("/detalle/{id}/cantidad/{letalidad}") 
    public Detalle detalle(@PathVariable Long id, @PathVariable int letalidad){
        return detalleService.findById(id,letalidad);
    }

    
    @GetMapping("/obtener-config")
    public ResponseEntity<?> ontenerConfig(@Value("${server.port}") String puerto){
    	log.info(texto);
    	
    	Map<String,String> json = new HashMap<>();
    	
    	json.put("texto", texto);
    	json.put("puerto", puerto);
    	
    	
    	
    	
    	return new ResponseEntity<Map<String,String>>(json,HttpStatus.OK);
    }
}
